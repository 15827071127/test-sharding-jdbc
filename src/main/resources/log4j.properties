#日志级别
#OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL
log4j.rootLogger=DEBUG,stdout

### 设置stdout的输出目的地，org.apache.log4j.ConsoleAppender（控制台）
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
### 设置stdout的输出样式，org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
### 设置stdout的自定义样式
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{6}:%L - %m%n

### direct messages to file hibernate.log ###
#log4j.appender.file=org.apache.log4j.FileAppender
#log4j.appender.file.File=hibernate.log
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### 输出到日志文件 ###
#log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.D.File = logs/log.log
#log4j.appender.D.Append = true
#log4j.appender.D.Threshold = DEBUG ## 输出DEBUG级别以上的日志
#log4j.appender.D.layout = org.apache.log4j.PatternLayout
#log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n
### 保存异常信息到单独文件 ###
#log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.D.File = logs/error.log ## 异常日志文件名
#log4j.appender.D.Append = true
#log4j.appender.D.Threshold = ERROR ## 只输出ERROR级别以上的日志!!!
#log4j.appender.D.layout = org.apache.log4j.PatternLayout
#log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n

###显示SQL语句部分
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=WARN
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG


log4j.logger.org.apache.ibatis=DEBUG
log4j.logger.org.mybatis.example.BlogMapper=DEBUG
log4j.logger.org.mybatis=DEBUG
log4j.logger.org.mybatis.spring=WARN

log4j.logger.com.opensymphony.xwork2=WARN
log4j.logger.com.opensymphony.xwork2.ognl.accessor=WARN
log4j.logger.com.opensymphony.xwork2.ognl.accessor.XWorkMethodAccessor=DEBUG

log4j.logger.org.apache.struts2=DEBUG
log4j.logger.org.apache.activemq=DEBUG

log4j.logger.org.apache.struts2.util.fs.JBossFileManager=WARN
log4j.logger.org.apache.struts2.convention.PackageBasedActionConfigBuilder=WARN
log4j.logger.org.apache.struts2.config.AbstractBeanSelectionProvider=WARN


log4j.logger.org.springframework.beans=WARN
log4j.logger.org.springframework.web=WARN
log4j.logger.org.springframework.context=WARN
log4j.logger.org.springframework.core=WARN
log4j.logger.org.springframework.aop=WARN
log4j.logger.org.springframework.transaction=WARN
log4j.logger.org.springframework.ui=WARN


log4j.logger.org.apache.activemq=INFO
log4j.logger.org.apache.activemq.spring=WARN

log4j.logger.com.opensymphony.xwork2.ognl.OgnlValueStack=DEBUG
log4j.logger.com.opensymphony.xwork2.interceptor.TimerInterceptor=DEBUG

#HttpClient的Log4J配置
# commons.httpclient
log4j.logger.httpclient.wire.header=INFO
log4j.logger.httpclient.wire=INFO
log4j.logger.org.apache.commons.httpclient=INFO

log4j.logger.org.apache.commons.beanutils.converters=WARN

#WEBSERVICE的配置
log4j.logger.org.apache.axis=INFO
log4j.logger.org.apache.axis.message.SAXOutputter=DEBUG



